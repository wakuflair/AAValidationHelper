@using AAValidationHelper
@model Sample.Models.Person

<html ng-app="myApp">
<head>
    <title>AAValidationHelper Sample</title>
</head>
<body>
    <script src="~/Scripts/angular.min.js"></script>
    <script type="text/javascript" src="~/Scripts/angular-messages.min.js"></script>
    <link rel="stylesheet" href="~/Content/bootstrap.min.css" />
    <script type="text/javascript">
        var module = angular.module('myApp', ['ngMessages']);

        module.directive("equalTo", function () {
            return {
                require: "ngModel",
                scope: {
                    otherModelValue: "=equalTo"
                },
                link: function (scope, element, attributes, ngModel) {
                    ngModel.$validators.equalTo = function (modelValue) {
                        return modelValue === scope.otherModelValue;
                    };

                    scope.$watch("otherModelValue", function () {
                        ngModel.$validate();
                    });
                }
            };
        });
    </script>
    <div style="width: 300px; padding: 10px;">
        <form name="userForm">
            <div class="form-group">
                @Html.LabelFor(m => m.Name)
                <input type="text" name="name" class="form-control" ng-model="user.name" @Html.NgValidationFor(m => m.Name) />
                @Html.NgMessageFor(m => m.Name, "userForm")
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Age)
                <input type="number" name="age" class="form-control" ng-model="user.age" @Html.NgValidationFor(m => m.Age) />
                @Html.NgMessageFor(m => m.Age, "userForm")
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.EmailAddress)
                <input type="email" name="emailAddress" class="form-control" ng-model="user.email" @Html.NgValidationFor(m => m.EmailAddress) />
                @Html.NgMessageFor(m => m.EmailAddress, "userForm")
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Id)
                <input type="text" name="id" class="form-control" ng-model="user.id" @Html.NgValidationFor(m => m.Id) />
                @Html.NgMessageFor(m => m.Id, "userForm")
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.Password)
                <input type="password" name="password" class="form-control" ng-model="user.password" @Html.NgValidationFor(m => m.Password) />
                @Html.NgMessageFor(m => m.Password, "userForm")
            </div>
            <div class="form-group">
                @Html.LabelFor(m => m.ConfirmPassword)
                <input type="password" name="confirmPassword" class="form-control" ng-model="user.confirmPassword" @Html.NgValidationFor(m => m.ConfirmPassword, new { equal_to = "user.password" }) />
                @Html.NgMessageFor(m => m.ConfirmPassword, "userForm")
            </div>
            <button type="submit" class="btn btn-default" ng-disabled="userForm.$invalid">Submit</button>
        </form>
    </div>
</body>
</html>